---
import { Badge } from '@/components/ui/badge';
import { ExternalLink, Share2, BookOpen } from 'lucide-vue-next';
import type { Project } from '@/types/project';
import { Image } from 'astro:assets';

interface Props {
  project: {
    data: Project;
  };
}

const { project } = Astro.props;
---

<div
  class="group bg-secondary relative flex-shrink-0 cursor-pointer overflow-hidden rounded-lg shadow-lg"
  data-project-slug={project.data.slug}
>
  <svg
    class="absolute bottom-0 left-0 mb-4 scale-150 transition-transform group-hover:scale-[2.65]"
    viewBox="0 0 375 283"
    fill="none"
    style="opacity: 0.1;"
  >
    <rect
      x="159.52"
      y="175"
      width="152"
      height="152"
      rx="8"
      transform="rotate(-45 159.52 175)"
      fill="white"></rect>
    <rect y="107.48" width="152" height="152" rx="8" transform="rotate(-45 0 107.48)" fill="white"
    ></rect>
  </svg>
  <div
    class="relative flex items-center justify-center px-4 pt-4 transition-transform group-hover:scale-110"
  >
    <Image class="relative w-50" src={project.data.logo} alt={project.data.title} />
  </div>
  <div class="px-8 py-4">
    <h3 class="border-primary text-foreground mb-4 w-fit border-b-1 text-center text-xl font-bold">
      {project.data.title}
    </h3>
    <p class="text-foreground mb-2 block pb-2 text-sm" set:html={project.data.description} />
    <div class="flex flex-wrap gap-1 pb-6">
      {
        project.data.technologies.slice(0, 4).map((tech: string) => (
          <Badge class="bg-foreground rounded-2xl font-bold text-white" variant="outline">
            {tech}
          </Badge>
        ))
      }
    </div>
    <div class="flex justify-between">
      <p class="z-10 cursor-pointer text-sm hover:underline">
        <BookOpen class="inline-block size-4" /> Resume
      </p>
      <div class="mb-4 flex flex-wrap justify-end gap-2">
        {
          project.data.github && (
            <a href={project.data.github} target="_blank" class="z-10 text-xs" data-link>
              <img src="/icons/github.svg" alt="Github" class="size-5" />
            </a>
          )
        }
        {
          project.data.link && (
            <a href={project.data.link} target="_blank" class="text-xs" data-link>
              <ExternalLink class="size-5" />
            </a>
          )
        }
        <a href={project.data.link} class="text-xs" data-link>
          <Share2 class="size-5" />
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  const cards = document.querySelectorAll('[data-project-slug]');
  const links = document.querySelectorAll('[data-link]');

  // Prevent click propagation on links
  links.forEach((link) => {
    link.addEventListener('click', (e) => {
      e.stopPropagation();
    });
  });

  cards.forEach((card) => {
    card.addEventListener('click', () => {
      const slug = card.getAttribute('data-project-slug');
      if (slug) {
        const event = new CustomEvent('selectProject', {
          detail: { slug },
          bubbles: true,
        });
        card.dispatchEvent(event);
      }
    });
  });
</script>
