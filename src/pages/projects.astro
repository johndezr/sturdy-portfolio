---
import MainLayout from '@/layouts/MainLayout.astro';
import { Separator } from '@/components/ui/separator';
import ProjectCard from '@/ui/modules/ProjectCard.astro';
import { getCollection } from 'astro:content';
import ProjectDialog from '@/ui/ProjectDialog.vue';

const projects = await getCollection('projects');
const featuredProjects = projects.filter((project) => project.data.featured);
---

<MainLayout
  title="Projects | John Galindez"
  description="Discover my featured web development and software engineering projects."
>
  <section class="relative flex flex-col items-center justify-center pt-24 md:pt-36 md:pb-12">
    <div class="container mx-auto max-w-6xl px-4">
      <div>
        <h1 class="flex text-4xl font-bold md:text-5xl lg:text-6xl">
          <img src="/icons/pre-title.svg" alt="Pre-title" class="mr-2 h-8 w-8" />
          The <span class="text-primary ml-2">Projects</span>
        </h1>
        <Separator class="my-4 max-w-sm" />
        <p class="text-muted-foreground max-w-2xl text-sm md:text-base">
          Personal projects I've worked on where I experiment with new technologies and ideas.
        </p>
      </div>
      <div class="mt-8 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
        {featuredProjects.map((project) => <ProjectCard project={project} />)}
      </div>
      <div class="my-8 flex flex-col items-center justify-center">
        <h3 class="text-bold text-sm md:text-xl">
          More projects are cooking up in my <a
            class="text-bold inline-block hover:underline"
            href="https://github.com/johndez"
            target="_blank"
          >
            <img src="/icons/github.svg" alt="GitHub" class="mb-1 ml-2 inline-block h-4 w-4" />
            GitHub.
          </a>
        </h3>
      </div>
    </div>
    <ProjectDialog client:load />
  </section>
</MainLayout>

<script>
  import { selectedProject, openProjectDialog } from '@/stores/projects';
  import { ProjectService } from '@/services/projects';

  document.addEventListener('selectProject', async (e: CustomEvent<{ slug: string }>) => {
    const { slug } = e.detail;
    if (!slug) return;

    try {
      const project = await ProjectService.getProject(slug);
      selectedProject.set(project);
      openProjectDialog.set(true);
    } catch (error) {
      console.error('Error in project selection:', error);
    }
  });
</script>
