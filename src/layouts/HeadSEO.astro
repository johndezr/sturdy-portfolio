---
interface Props {
  title?: string | undefined;
  description?: string | undefined;
  ogImage?: URL | undefined;
  siteName?: string | undefined;
  twitterSite?: string | undefined;
  twitterCreator?: string | undefined;
  author?: string | undefined;
  keywords?: string | undefined;
  googleSiteVerification?: string | undefined;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

if (Astro.props.ogImage === undefined) {
  Astro.props.ogImage = new URL('og-image.png', canonicalURL);
}

const {
  title,
  description,
  ogImage,
  siteName,
  twitterSite,
  twitterCreator,
  author,
  keywords,
  googleSiteVerification,
} = Astro.props;

const gaId = import.meta.env.GOOGLE_ANALYTICS_ID;
---

<meta charset="utf-8" />
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<link rel="canonical" href={canonicalURL} />
<link rel="shortcut icon" type="image/svg+xml" href={`/favicon.ico`} />
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
{author && <meta name="author" content={author} />}
{keywords && <meta name="keywords" content={keywords} />}
{
  googleSiteVerification && (
    <meta name="google-site-verification" content={googleSiteVerification} />
  )
}

<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImage} />
{siteName && <meta property="og:site_name" content={siteName} />}

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={ogImage} />
{twitterSite && <meta name="twitter:site" content={twitterSite} />}
{twitterCreator && <meta name="twitter:creator" content={twitterCreator} />}

<!-- Google tag (gtag.js) -->
<script
  is:inline
  type="text/partytown"
  async
  src={`https://www.googletagmanager.com/gtag/js?id=${gaId}`}></script>
<script is:inline type="text/partytown">
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag('js', new Date());
  gtag('config', '{gaId}');
</script>
